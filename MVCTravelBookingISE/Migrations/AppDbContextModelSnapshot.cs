// <auto-generated />
using System;
using MVCTravelBookingISE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVCTravelBookingISE.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MVCTravelBookingISE.Models.AccomodationModel", b =>
                {
                    b.Property<int>("Acco_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Acco_Id"), 1L, 1);

                    b.Property<int>("Acco_Bathrooms")
                        .HasColumnType("int");

                    b.Property<string>("Acco_Destination")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Acco_Distance")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Acco_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Acco_Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Acco_Rate")
                        .HasColumnType("int");

                    b.Property<int>("Acco_Rooms")
                        .HasColumnType("int");

                    b.Property<string>("Acco_Rules")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Acco_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Acco_picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Acco_Id");

                    b.ToTable("Accomodation");
                });

            modelBuilder.Entity("MVCTravelBookingISE.Models.BookingModel", b =>
                {
                    b.Property<int>("Booking_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Booking_Id"), 1L, 1);

                    b.Property<int>("Acco_Id")
                        .HasColumnType("int");

                    b.Property<string>("Booking_Approved")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Booking_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Booking_TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Booking_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FlightRulesModelFlightRules_Id")
                        .HasColumnType("int");

                    b.Property<int>("Flight_Id")
                        .HasColumnType("int");

                    b.Property<int>("Transport_Id")
                        .HasColumnType("int");

                    b.HasKey("Booking_Id");

                    b.HasIndex("Acco_Id");

                    b.HasIndex("FlightRulesModelFlightRules_Id");

                    b.HasIndex("Flight_Id");

                    b.HasIndex("Transport_Id");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("MVCTravelBookingISE.Models.FlightModel", b =>
                {
                    b.Property<int>("Flight_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Flight_Id"), 1L, 1);

                    b.Property<int>("FlightRules_Id")
                        .HasColumnType("int");

                    b.Property<string>("Flight_Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("Flight_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Flight_Departure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flight_Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Flight_Price")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Flight_Id");

                    b.HasIndex("FlightRules_Id");

                    b.ToTable("Flight");
                });

            modelBuilder.Entity("MVCTravelBookingISE.Models.FlightRulesModel", b =>
                {
                    b.Property<int>("FlightRules_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightRules_Id"), 1L, 1);

                    b.Property<string>("Flight_Descrip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flight_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FlightRules_Id");

                    b.ToTable("FlightRule");
                });

            modelBuilder.Entity("MVCTravelBookingISE.Models.RewardsModel", b =>
                {
                    b.Property<int>("Rewards_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Rewards_Id"), 1L, 1);

                    b.Property<DateTime>("ExpiryRewardsDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Rewards_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rewards_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rewards_Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Traveller_Id")
                        .HasColumnType("int");

                    b.HasKey("Rewards_Id");

                    b.HasIndex("Traveller_Id");

                    b.ToTable("RewardsModel");
                });

            modelBuilder.Entity("MVCTravelBookingISE.Models.TransportModel", b =>
                {
                    b.Property<int>("Transport_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Transport_Id"), 1L, 1);

                    b.Property<string>("Destination_point")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pick_Up_Point")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transport_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("Transport_ratings")
                        .HasColumnType("int");

                    b.HasKey("Transport_Id");

                    b.ToTable("Transport");
                });

            modelBuilder.Entity("MVCTravelBookingISE.Models.TravellerBooking", b =>
                {
                    b.Property<int>("Traveller_Id")
                        .HasColumnType("int");

                    b.Property<int>("Booking_Id")
                        .HasColumnType("int");

                    b.HasKey("Traveller_Id", "Booking_Id");

                    b.HasIndex("Booking_Id");

                    b.ToTable("TravellerBooking");
                });

            modelBuilder.Entity("MVCTravelBookingISE.Models.TravellerModel", b =>
                {
                    b.Property<int>("Traveller_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Traveller_Id"), 1L, 1);

                    b.Property<DateTime>("Date_Of_Birth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ratings")
                        .HasColumnType("int");

                    b.HasKey("Traveller_Id");

                    b.ToTable("Traveller");
                });

            modelBuilder.Entity("MVCTravelBookingISE.Models.BookingModel", b =>
                {
                    b.HasOne("MVCTravelBookingISE.Models.AccomodationModel", "Accomodation")
                        .WithMany("Bookings")
                        .HasForeignKey("Acco_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCTravelBookingISE.Models.FlightRulesModel", null)
                        .WithMany("Bookings")
                        .HasForeignKey("FlightRulesModelFlightRules_Id");

                    b.HasOne("MVCTravelBookingISE.Models.FlightModel", "Flight")
                        .WithMany("Bookings")
                        .HasForeignKey("Flight_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCTravelBookingISE.Models.TransportModel", "Transport")
                        .WithMany("Bookings")
                        .HasForeignKey("Transport_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accomodation");

                    b.Navigation("Flight");

                    b.Navigation("Transport");
                });

            modelBuilder.Entity("MVCTravelBookingISE.Models.FlightModel", b =>
                {
                    b.HasOne("MVCTravelBookingISE.Models.FlightRulesModel", "FlightRule")
                        .WithMany("Flights")
                        .HasForeignKey("FlightRules_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FlightRule");
                });

            modelBuilder.Entity("MVCTravelBookingISE.Models.RewardsModel", b =>
                {
                    b.HasOne("MVCTravelBookingISE.Models.TravellerModel", "Traveller")
                        .WithMany("Rewards")
                        .HasForeignKey("Traveller_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Traveller");
                });

            modelBuilder.Entity("MVCTravelBookingISE.Models.TravellerBooking", b =>
                {
                    b.HasOne("MVCTravelBookingISE.Models.BookingModel", "Booking")
                        .WithMany("TravellerBookings")
                        .HasForeignKey("Booking_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCTravelBookingISE.Models.TravellerModel", "Traveller")
                        .WithMany("TravellerBookings")
                        .HasForeignKey("Traveller_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Traveller");
                });

            modelBuilder.Entity("MVCTravelBookingISE.Models.AccomodationModel", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("MVCTravelBookingISE.Models.BookingModel", b =>
                {
                    b.Navigation("TravellerBookings");
                });

            modelBuilder.Entity("MVCTravelBookingISE.Models.FlightModel", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("MVCTravelBookingISE.Models.FlightRulesModel", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Flights");
                });

            modelBuilder.Entity("MVCTravelBookingISE.Models.TransportModel", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("MVCTravelBookingISE.Models.TravellerModel", b =>
                {
                    b.Navigation("Rewards");

                    b.Navigation("TravellerBookings");
                });
#pragma warning restore 612, 618
        }
    }
}
